import tkinter as tk
from tkinter import ttk, messagebox

# ====================================================
# SISTEMA DE CONTROLE DE ESTOQUE (VISUAL E COM BAIXA)
# ====================================================

estoque = []  # Lista de produtos armazenados


# ----------------------------------------------------
# FUN√á√ÉO: Adicionar produto
# ----------------------------------------------------
def adicionar_produto():
    nome = entrada_nome.get().strip()
    quantidade = entrada_quantidade.get().strip()

    if nome == "" or quantidade == "":
        messagebox.showwarning("‚ö†Ô∏è Aten√ß√£o", "Preencha todos os campos!")
        return

    try:
        quantidade = int(quantidade)
    except ValueError:
        messagebox.showwarning("Erro", "A quantidade deve ser um n√∫mero inteiro!")
        return

    # Adiciona o produto
    produto = {"nome": nome, "quantidade": quantidade}
    estoque.append(produto)

    atualizar_tabela()
    limpar_campos()
    messagebox.showinfo("‚úÖ Sucesso", f"Produto '{nome}' adicionado com sucesso!")


# ----------------------------------------------------
# FUN√á√ÉO: Atualizar tabela
# ----------------------------------------------------
def atualizar_tabela():
    for item in tabela.get_children():
        tabela.delete(item)

    for i, produto in enumerate(estoque):
        tabela.insert("", "end", iid=i, values=(produto["nome"], produto["quantidade"]))


# ----------------------------------------------------
# FUN√á√ÉO: Limpar campos
# ----------------------------------------------------
def limpar_campos():
    entrada_nome.delete(0, tk.END)
    entrada_quantidade.delete(0, tk.END)


# ----------------------------------------------------
# FUN√á√ÉO: Dar baixa no estoque
# ----------------------------------------------------
def dar_baixa():
    try:
        item_selecionado = tabela.selection()[0]
        indice = int(item_selecionado)
        produto = estoque[indice]
    except IndexError:
        messagebox.showwarning("Erro", "Selecione um produto para dar baixa!")
        return

    # Janela de baixa
    janela_baixa = tk.Toplevel(root)
    janela_baixa.title("üì¶ Dar baixa no estoque")
    janela_baixa.geometry("320x180")
    janela_baixa.configure(bg="#f4f4f4")

    tk.Label(janela_baixa, text=f"Produto: {produto['nome']}", font=("Arial", 11, "bold"), bg="#f4f4f4").pack(pady=10)
    tk.Label(janela_baixa, text="Quantidade a dar baixa:", bg="#f4f4f4").pack()
    entrada_baixa = tk.Entry(janela_baixa, justify="center", font=("Arial", 11))
    entrada_baixa.pack(pady=5)

    def confirmar_baixa():
        try:
            qtd_baixa = int(entrada_baixa.get())
        except ValueError:
            messagebox.showwarning("Erro", "Digite um n√∫mero v√°lido!")
            return

        if qtd_baixa <= 0:
            messagebox.showwarning("Erro", "A quantidade deve ser maior que zero!")
            return

        if qtd_baixa > produto["quantidade"]:
            messagebox.showwarning("Erro", "Quantidade maior que o estoque dispon√≠vel!")
            return

        produto["quantidade"] -= qtd_baixa
        atualizar_tabela()
        janela_baixa.destroy()
        messagebox.showinfo("‚úÖ Sucesso", f"Baixa de {qtd_baixa} unidade(s) do produto '{produto['nome']}' realizada!")

    tk.Button(
        janela_baixa, text="Confirmar Baixa", bg="#4CAF50", fg="white",
        font=("Arial", 11, "bold"), relief="ridge", command=confirmar_baixa
    ).pack(pady=10)


# ----------------------------------------------------
# INTERFACE PRINCIPAL
# ----------------------------------------------------
root = tk.Tk()
root.title("üì¶ Sistema de Controle de Estoque")
root.geometry("600x500")
root.configure(bg="#e8f0fe")  # fundo suave

# --- T√≠tulo ---
titulo = tk.Label(
    root,
    text="SISTEMA DE CONTROLE DE ESTOQUE",
    font=("Arial", 16, "bold"),
    bg="#1E88E5",
    fg="white",
    pady=10
)
titulo.pack(fill="x")

# --- Frame dos campos ---
frame_campos = tk.LabelFrame(root, text="Cadastro de Produto", bg="#e8f0fe", padx=10, pady=10)
frame_campos.pack(pady=15, padx=20, fill="x")

tk.Label(frame_campos, text="Nome do Produto:", bg="#e8f0fe", font=("Arial", 11)).grid(row=0, column=0, padx=5, pady=5)
entrada_nome = tk.Entry(frame_campos, width=30, font=("Arial", 11))
entrada_nome.grid(row=0, column=1, padx=5, pady=5)

tk.Label(frame_campos, text="Quantidade:", bg="#e8f0fe", font=("Arial", 11)).grid(row=1, column=0, padx=5, pady=5)
entrada_quantidade = tk.Entry(frame_campos, width=30, font=("Arial", 11))
entrada_quantidade.grid(row=1, column=1, padx=5, pady=5)

# --- Bot√µes ---
frame_botoes = tk.Frame(root, bg="#e8f0fe")
frame_botoes.pack(pady=10)

btn_add = tk.Button(frame_botoes, text="‚ûï Adicionar Produto", bg="#4CAF50", fg="white", font=("Arial", 11, "bold"), width=20, relief="ridge", command=adicionar_produto)
btn_add.grid(row=0, column=0, padx=10)

btn_baixa = tk.Button(frame_botoes, text="‚¨áÔ∏è Dar Baixa no Estoque", bg="#FF9800", fg="white", font=("Arial", 11, "bold"), width=22, relief="ridge", command=dar_baixa)
btn_baixa.grid(row=0, column=1, padx=10)

# --- Tabela ---
frame_tabela = tk.LabelFrame(root, text="Estoque Atual", bg="#e8f0fe")
frame_tabela.pack(padx=20, pady=10, fill="both", expand=True)

colunas = ("Produto", "Quantidade")
tabela = ttk.Treeview(frame_tabela, columns=colunas, show="headings")
tabela.heading("Produto", text="Produto")
tabela.heading("Quantidade", text="Quantidade")
tabela.column("Produto", width=300)
tabela.column("Quantidade", width=100, anchor="center")
tabela.pack(fill="both", expand=True, pady=5)

# --- Barra de rolagem ---
scrollbar = ttk.Scrollbar(frame_tabela, orient="vertical", command=tabela.yview)
tabela.configure(yscroll=scrollbar.set)
scrollbar.pack(side="right", fill="y")

# --- Rodap√© ---
rodape = tk.Label(root, text="¬© 2025 - Sistema de Estoque | Feito em Python üêç", bg="#1E88E5", fg="white", pady=8)
rodape.pack(fill="x", side="bottom")

root.mainloop()
